// adapted from https://github.com/dutchenkoOleg/sort-css-media-queries
const minMaxWidth = /(!?\(\s*min(-device-)?-width).+\(\s*max(-device)?-width/i;
const minWidth = /\(\s*min(-device)?-width/i;
const maxMinWidth = /(!?\(\s*max(-device)?-width).+\(\s*min(-device)?-width/i;
const maxWidth = /\(\s*max(-device)?-width/i;

const isMinWidth = _testQuery(minMaxWidth, maxMinWidth, minWidth);

const isMaxWidth = _testQuery(maxMinWidth, minMaxWidth, maxWidth);

const minMaxHeight = /(!?\(\s*min(-device)?-height).+\(\s*max(-device)?-height/i;
const minHeight = /\(\s*min(-device)?-height/i;
const maxMinHeight = /(!?\(\s*max(-device)?-height).+\(\s*min(-device)?-height/i;
const maxHeight = /\(\s*max(-device)?-height/i;

const isMinHeight = _testQuery(minMaxHeight, maxMinHeight, minHeight);

const isMaxHeight = _testQuery(maxMinHeight, minMaxHeight, maxHeight);

const isPrint = /print/i;
const isPrintOnly = /^print$/i;
const maxValue = Number.MAX_VALUE;

function _getQueryLength(length) {
  const matches = /(-?\d*\.?\d+)(ch|em|ex|px|rem)/.exec(length);

  if (matches === null) {
    return maxValue;
  }

  let number = matches[1];
  const unit = matches[2];

  switch (unit) {
    case "ch":
      number = parseFloat(number) * 8.8984375;
      break;

    case "em":
    case "rem":
      number = parseFloat(number) * 16;
      break;

    case "ex":
      number = parseFloat(number) * 8.296875;
      break;

    case "px":
      number = parseFloat(number);
      break;
  }

  return +number;
}

function _testQuery(doubleTestTrue, doubleTestFalse, singleTest) {
  return function (query) {
    if (doubleTestTrue.test(query)) {
      return true;
    } else if (doubleTestFalse.test(query)) {
      return false;
    }

    return singleTest.test(query);
  };
}

function _testIsPrint(a, b) {
  const isPrintA = isPrint.test(a);
  const isPrintOnlyA = isPrintOnly.test(a);
  const isPrintB = isPrint.test(b);
  const isPrintOnlyB = isPrintOnly.test(b);

  if (isPrintA && isPrintB) {
    if (!isPrintOnlyA && isPrintOnlyB) {
      return 1;
    }

    if (isPrintOnlyA && !isPrintOnlyB) {
      return -1;
    }

    return a.localeCompare(b);
  }

  if (isPrintA) {
    return 1;
  }

  if (isPrintB) {
    return -1;
  }

  return null;
}

export default function sortCSSmq(a, b) {
  if (a === "") {
    return -1;
  }

  if (b === "") {
    return 1;
  }

  const testIsPrint = _testIsPrint(a, b);

  if (testIsPrint !== null) {
    return testIsPrint;
  }

  const minA = isMinWidth(a) || isMinHeight(a);
  const maxA = isMaxWidth(a) || isMaxHeight(a);
  const minB = isMinWidth(b) || isMinHeight(b);
  const maxB = isMaxWidth(b) || isMaxHeight(b);

  if (minA && maxB) {
    return -1;
  }

  if (maxA && minB) {
    return 1;
  }

  const lengthA = _getQueryLength(a);

  const lengthB = _getQueryLength(b);

  if (lengthA === maxValue && lengthB === maxValue) {
    return a.localeCompare(b);
  } else if (lengthA === maxValue) {
    return 1;
  } else if (lengthB === maxValue) {
    return -1;
  }

  if (lengthA > lengthB) {
    if (maxA) {
      return -1;
    }

    return 1;
  }

  if (lengthA < lengthB) {
    if (maxA) {
      return 1;
    }

    return -1;
  }

  return a.localeCompare(b);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtaW5NYXhXaWR0aCIsIm1pbldpZHRoIiwibWF4TWluV2lkdGgiLCJtYXhXaWR0aCIsImlzTWluV2lkdGgiLCJfdGVzdFF1ZXJ5IiwiaXNNYXhXaWR0aCIsIm1pbk1heEhlaWdodCIsIm1pbkhlaWdodCIsIm1heE1pbkhlaWdodCIsIm1heEhlaWdodCIsImlzTWluSGVpZ2h0IiwiaXNNYXhIZWlnaHQiLCJpc1ByaW50IiwiaXNQcmludE9ubHkiLCJtYXhWYWx1ZSIsIk51bWJlciIsIk1BWF9WQUxVRSIsIl9nZXRRdWVyeUxlbmd0aCIsImxlbmd0aCIsIm1hdGNoZXMiLCJleGVjIiwibnVtYmVyIiwidW5pdCIsInBhcnNlRmxvYXQiLCJkb3VibGVUZXN0VHJ1ZSIsImRvdWJsZVRlc3RGYWxzZSIsInNpbmdsZVRlc3QiLCJxdWVyeSIsInRlc3QiLCJfdGVzdElzUHJpbnQiLCJhIiwiYiIsImlzUHJpbnRBIiwiaXNQcmludE9ubHlBIiwiaXNQcmludEIiLCJpc1ByaW50T25seUIiLCJsb2NhbGVDb21wYXJlIiwic29ydENTU21xIiwidGVzdElzUHJpbnQiLCJtaW5BIiwibWF4QSIsIm1pbkIiLCJtYXhCIiwibGVuZ3RoQSIsImxlbmd0aEIiXSwic291cmNlcyI6WyJzcmMvc29ydC1jc3MtbWVkaWEtcXVlcmllcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBhZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2R1dGNoZW5rb09sZWcvc29ydC1jc3MtbWVkaWEtcXVlcmllc1xuXG5jb25zdCBtaW5NYXhXaWR0aCA9IC8oIT9cXChcXHMqbWluKC1kZXZpY2UtKT8td2lkdGgpLitcXChcXHMqbWF4KC1kZXZpY2UpPy13aWR0aC9pO1xuY29uc3QgbWluV2lkdGggPSAvXFwoXFxzKm1pbigtZGV2aWNlKT8td2lkdGgvaTtcbmNvbnN0IG1heE1pbldpZHRoID0gLyghP1xcKFxccyptYXgoLWRldmljZSk/LXdpZHRoKS4rXFwoXFxzKm1pbigtZGV2aWNlKT8td2lkdGgvaTtcbmNvbnN0IG1heFdpZHRoID0gL1xcKFxccyptYXgoLWRldmljZSk/LXdpZHRoL2k7XG5cbmNvbnN0IGlzTWluV2lkdGggPSBfdGVzdFF1ZXJ5KG1pbk1heFdpZHRoLCBtYXhNaW5XaWR0aCwgbWluV2lkdGgpO1xuY29uc3QgaXNNYXhXaWR0aCA9IF90ZXN0UXVlcnkobWF4TWluV2lkdGgsIG1pbk1heFdpZHRoLCBtYXhXaWR0aCk7XG5cbmNvbnN0IG1pbk1heEhlaWdodCA9XG4gIC8oIT9cXChcXHMqbWluKC1kZXZpY2UpPy1oZWlnaHQpLitcXChcXHMqbWF4KC1kZXZpY2UpPy1oZWlnaHQvaTtcbmNvbnN0IG1pbkhlaWdodCA9IC9cXChcXHMqbWluKC1kZXZpY2UpPy1oZWlnaHQvaTtcbmNvbnN0IG1heE1pbkhlaWdodCA9XG4gIC8oIT9cXChcXHMqbWF4KC1kZXZpY2UpPy1oZWlnaHQpLitcXChcXHMqbWluKC1kZXZpY2UpPy1oZWlnaHQvaTtcbmNvbnN0IG1heEhlaWdodCA9IC9cXChcXHMqbWF4KC1kZXZpY2UpPy1oZWlnaHQvaTtcblxuY29uc3QgaXNNaW5IZWlnaHQgPSBfdGVzdFF1ZXJ5KG1pbk1heEhlaWdodCwgbWF4TWluSGVpZ2h0LCBtaW5IZWlnaHQpO1xuY29uc3QgaXNNYXhIZWlnaHQgPSBfdGVzdFF1ZXJ5KG1heE1pbkhlaWdodCwgbWluTWF4SGVpZ2h0LCBtYXhIZWlnaHQpO1xuXG5jb25zdCBpc1ByaW50ID0gL3ByaW50L2k7XG5jb25zdCBpc1ByaW50T25seSA9IC9ecHJpbnQkL2k7XG5jb25zdCBtYXhWYWx1ZSA9IE51bWJlci5NQVhfVkFMVUU7XG5cbmZ1bmN0aW9uIF9nZXRRdWVyeUxlbmd0aChsZW5ndGg6IHN0cmluZykge1xuICBjb25zdCBtYXRjaGVzID0gLygtP1xcZCpcXC4/XFxkKykoY2h8ZW18ZXh8cHh8cmVtKS8uZXhlYyhsZW5ndGgpO1xuICBpZiAobWF0Y2hlcyA9PT0gbnVsbCkge1xuICAgIHJldHVybiBtYXhWYWx1ZTtcbiAgfVxuICBsZXQgbnVtYmVyOiBudW1iZXIgfCBzdHJpbmcgPSBtYXRjaGVzWzFdO1xuICBjb25zdCB1bml0ID0gbWF0Y2hlc1syXTtcbiAgc3dpdGNoICh1bml0KSB7XG4gICAgY2FzZSBcImNoXCI6XG4gICAgICBudW1iZXIgPSBwYXJzZUZsb2F0KG51bWJlcikgKiA4Ljg5ODQzNzU7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiZW1cIjpcbiAgICBjYXNlIFwicmVtXCI6XG4gICAgICBudW1iZXIgPSBwYXJzZUZsb2F0KG51bWJlcikgKiAxNjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJleFwiOlxuICAgICAgbnVtYmVyID0gcGFyc2VGbG9hdChudW1iZXIpICogOC4yOTY4NzU7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwicHhcIjpcbiAgICAgIG51bWJlciA9IHBhcnNlRmxvYXQobnVtYmVyKTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiArbnVtYmVyO1xufVxuXG5mdW5jdGlvbiBfdGVzdFF1ZXJ5KFxuICBkb3VibGVUZXN0VHJ1ZTogUmVnRXhwLFxuICBkb3VibGVUZXN0RmFsc2U6IFJlZ0V4cCxcbiAgc2luZ2xlVGVzdDogUmVnRXhwLFxuKSB7XG4gIHJldHVybiBmdW5jdGlvbiAocXVlcnk6IHN0cmluZykge1xuICAgIGlmIChkb3VibGVUZXN0VHJ1ZS50ZXN0KHF1ZXJ5KSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIGlmIChkb3VibGVUZXN0RmFsc2UudGVzdChxdWVyeSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHNpbmdsZVRlc3QudGVzdChxdWVyeSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIF90ZXN0SXNQcmludChhOiBzdHJpbmcsIGI6IHN0cmluZykge1xuICBjb25zdCBpc1ByaW50QSA9IGlzUHJpbnQudGVzdChhKTtcbiAgY29uc3QgaXNQcmludE9ubHlBID0gaXNQcmludE9ubHkudGVzdChhKTtcbiAgY29uc3QgaXNQcmludEIgPSBpc1ByaW50LnRlc3QoYik7XG4gIGNvbnN0IGlzUHJpbnRPbmx5QiA9IGlzUHJpbnRPbmx5LnRlc3QoYik7XG5cbiAgaWYgKGlzUHJpbnRBICYmIGlzUHJpbnRCKSB7XG4gICAgaWYgKCFpc1ByaW50T25seUEgJiYgaXNQcmludE9ubHlCKSB7XG4gICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgaWYgKGlzUHJpbnRPbmx5QSAmJiAhaXNQcmludE9ubHlCKSB7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIHJldHVybiBhLmxvY2FsZUNvbXBhcmUoYik7XG4gIH1cbiAgaWYgKGlzUHJpbnRBKSB7XG4gICAgcmV0dXJuIDE7XG4gIH1cbiAgaWYgKGlzUHJpbnRCKSB7XG4gICAgcmV0dXJuIC0xO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzb3J0Q1NTbXEoYTogc3RyaW5nLCBiOiBzdHJpbmcpIHtcbiAgaWYgKGEgPT09IFwiXCIpIHtcbiAgICByZXR1cm4gLTE7XG4gIH1cbiAgaWYgKGIgPT09IFwiXCIpIHtcbiAgICByZXR1cm4gMTtcbiAgfVxuICBjb25zdCB0ZXN0SXNQcmludCA9IF90ZXN0SXNQcmludChhLCBiKTtcbiAgaWYgKHRlc3RJc1ByaW50ICE9PSBudWxsKSB7XG4gICAgcmV0dXJuIHRlc3RJc1ByaW50O1xuICB9XG5cbiAgY29uc3QgbWluQSA9IGlzTWluV2lkdGgoYSkgfHwgaXNNaW5IZWlnaHQoYSk7XG4gIGNvbnN0IG1heEEgPSBpc01heFdpZHRoKGEpIHx8IGlzTWF4SGVpZ2h0KGEpO1xuICBjb25zdCBtaW5CID0gaXNNaW5XaWR0aChiKSB8fCBpc01pbkhlaWdodChiKTtcbiAgY29uc3QgbWF4QiA9IGlzTWF4V2lkdGgoYikgfHwgaXNNYXhIZWlnaHQoYik7XG5cbiAgaWYgKG1pbkEgJiYgbWF4Qikge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICBpZiAobWF4QSAmJiBtaW5CKSB7XG4gICAgcmV0dXJuIDE7XG4gIH1cblxuICBjb25zdCBsZW5ndGhBID0gX2dldFF1ZXJ5TGVuZ3RoKGEpO1xuICBjb25zdCBsZW5ndGhCID0gX2dldFF1ZXJ5TGVuZ3RoKGIpO1xuXG4gIGlmIChsZW5ndGhBID09PSBtYXhWYWx1ZSAmJiBsZW5ndGhCID09PSBtYXhWYWx1ZSkge1xuICAgIHJldHVybiBhLmxvY2FsZUNvbXBhcmUoYik7XG4gIH0gZWxzZSBpZiAobGVuZ3RoQSA9PT0gbWF4VmFsdWUpIHtcbiAgICByZXR1cm4gMTtcbiAgfSBlbHNlIGlmIChsZW5ndGhCID09PSBtYXhWYWx1ZSkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuXG4gIGlmIChsZW5ndGhBID4gbGVuZ3RoQikge1xuICAgIGlmIChtYXhBKSB7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIHJldHVybiAxO1xuICB9XG5cbiAgaWYgKGxlbmd0aEEgPCBsZW5ndGhCKSB7XG4gICAgaWYgKG1heEEpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gLTE7XG4gIH1cblxuICByZXR1cm4gYS5sb2NhbGVDb21wYXJlKGIpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFdBQVcsR0FBRywwREFBcEI7QUFDQSxNQUFNQyxRQUFRLEdBQUcsMkJBQWpCO0FBQ0EsTUFBTUMsV0FBVyxHQUFHLHlEQUFwQjtBQUNBLE1BQU1DLFFBQVEsR0FBRywyQkFBakI7O0FBRUEsTUFBTUMsVUFBVSxHQUFHQyxVQUFVLENBQUNMLFdBQUQsRUFBY0UsV0FBZCxFQUEyQkQsUUFBM0IsQ0FBN0I7O0FBQ0EsTUFBTUssVUFBVSxHQUFHRCxVQUFVLENBQUNILFdBQUQsRUFBY0YsV0FBZCxFQUEyQkcsUUFBM0IsQ0FBN0I7O0FBRUEsTUFBTUksWUFBWSxHQUNoQiwyREFERjtBQUVBLE1BQU1DLFNBQVMsR0FBRyw0QkFBbEI7QUFDQSxNQUFNQyxZQUFZLEdBQ2hCLDJEQURGO0FBRUEsTUFBTUMsU0FBUyxHQUFHLDRCQUFsQjs7QUFFQSxNQUFNQyxXQUFX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