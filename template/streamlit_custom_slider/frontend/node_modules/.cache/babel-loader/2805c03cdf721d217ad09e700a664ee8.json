{"ast":null,"code":"/* eslint-env browser */\nconst STYLES_HYDRATOR = /\\.([^{:]+)(:[^{]+)?{(?:[^}]*;)?([^}]*?)}/g;\nconst KEYFRAMES_HYRDATOR = /@keyframes ([^{]+){((?:(?:from|to|(?:\\d+\\.?\\d*%))\\{(?:[^}])*})*)}/g;\nconst FONT_FACE_HYDRATOR = /@font-face\\{font-family:([^;]+);([^}]*)\\}/g;\nfunction hydrateStyles(cache, hydrator, css) {\n  let match;\n  while (match = hydrator.exec(css)) {\n    const [, id, pseudo, key] = match;\n    if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n    const fullKey = pseudo ? `${pseudo}${key}` : key;\n    cache.cache[fullKey] = id; // set cache without triggering side effects\n\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nfunction hydrate(cache, hydrator, css) {\n  let match;\n  while (match = hydrator.exec(css)) {\n    const [, id, key] = match;\n    if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n    cache.cache[key] = id; // set cache without triggering side effects\n\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nimport SequentialIDGenerator from \"../sequential-id-generator\";\nimport { Cache, MultiCache } from \"../cache\";\nimport injectStylePrefixed from \"../inject-style-prefixed\";\nimport { styleBlockToRule, atomicSelector, keyframesBlockToRule, declarationsToBlock, keyframesToBlock, fontFaceBlockToRule } from \"../css\";\nimport { insertRuleIntoDevtools, hydrateDevtoolsRule } from \"../dev-tool\";\nclass StyletronClient {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.styleElements = {};\n    const styleIdGenerator = new SequentialIDGenerator(opts.prefix);\n    const onNewStyle = (cache, id, value) => {\n      const {\n        pseudo,\n        block\n      } = value;\n      const sheet = this.styleElements[cache.key].sheet;\n      const selector = atomicSelector(id, pseudo);\n      const rule = styleBlockToRule(selector, block);\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n        if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n          insertRuleIntoDevtools(selector, block);\n        }\n      } catch (e) {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(`Failed to inject CSS: \"${rule}\". Perhaps this has invalid or un-prefixed properties?`);\n        }\n      }\n    }; // Setup style cache\n\n    this.styleCache = new MultiCache(styleIdGenerator, (media, _cache, insertBeforeMedia) => {\n      const styleElement = document.createElement(\"style\");\n      styleElement.media = media;\n      if (insertBeforeMedia === void 0) {\n        this.container.appendChild(styleElement);\n      } else {\n        const insertBeforeIndex = findSheetIndexWithMedia(this.container.children, insertBeforeMedia);\n        this.container.insertBefore(styleElement, this.container.children[insertBeforeIndex]);\n      }\n      this.styleElements[media] = styleElement;\n    }, onNewStyle);\n    this.keyframesCache = new Cache(new SequentialIDGenerator(opts.prefix), (cache, id, value) => {\n      this.styleCache.getCache(\"\");\n      const sheet = this.styleElements[\"\"].sheet;\n      const rule = keyframesBlockToRule(id, keyframesToBlock(value));\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(`Failed to inject CSS: \"${rule}\". Perhaps this has invalid or un-prefixed properties?`);\n        }\n      }\n    });\n    this.fontFaceCache = new Cache(new SequentialIDGenerator(opts.prefix), (cache, id, value) => {\n      this.styleCache.getCache(\"\");\n      const sheet = this.styleElements[\"\"].sheet;\n      const rule = fontFaceBlockToRule(id, declarationsToBlock(value));\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(`Failed to inject CSS: \"${rule}\". Perhaps this has invalid or un-prefixed properties?`);\n        }\n      }\n    });\n    if (opts.container) {\n      this.container = opts.container;\n    } // Hydrate\n\n    if (opts.hydrate && opts.hydrate.length > 0) {\n      // infer container from parent element\n      if (!this.container) {\n        const parentElement = opts.hydrate[0].parentElement;\n        if (parentElement !== null && parentElement !== void 0) {\n          this.container = parentElement;\n        }\n      }\n      for (let i = 0; i < opts.hydrate.length; i++) {\n        const element = opts.hydrate[i];\n        const hydrateType = element.getAttribute(\"data-hydrate\");\n        if (hydrateType === \"font-face\") {\n          hydrate(this.fontFaceCache, FONT_FACE_HYDRATOR, element.textContent);\n          continue;\n        }\n        if (hydrateType === \"keyframes\") {\n          hydrate(this.keyframesCache, KEYFRAMES_HYRDATOR, element.textContent);\n          continue;\n        }\n        const key = element.media ? element.media : \"\";\n        this.styleElements[key] = element;\n        const cache = new Cache(styleIdGenerator, onNewStyle);\n        cache.key = key;\n        hydrateStyles(cache, STYLES_HYDRATOR, element.textContent);\n        this.styleCache.sortedCacheKeys.push(key);\n        this.styleCache.caches[key] = cache;\n      }\n    }\n    if (!this.container) {\n      if (document.head === null) {\n        throw new Error(\"No container provided and `document.head` was null\");\n      }\n      this.container = document.head;\n    }\n  }\n  renderStyle(style) {\n    return injectStylePrefixed(this.styleCache, style, \"\", \"\");\n  }\n  renderFontFace(fontFace) {\n    const key = declarationsToBlock(fontFace);\n    return this.fontFaceCache.addValue(key, fontFace);\n  }\n  renderKeyframes(keyframes) {\n    const key = keyframesToBlock(keyframes);\n    return this.keyframesCache.addValue(key, keyframes);\n  }\n}\nexport default StyletronClient;\nfunction findSheetIndexWithMedia(children, media) {\n  let index = 0;\n  for (; index < children.length; index++) {\n    const child = children[index];\n    if (child.tagName === \"STYLE\" && child.media === media) {\n      return index;\n    }\n  }\n  return -1;\n}","map":{"version":3,"names":["STYLES_HYDRATOR","KEYFRAMES_HYRDATOR","FONT_FACE_HYDRATOR","hydrateStyles","cache","hydrator","css","match","exec","id","pseudo","key","process","env","NODE_ENV","window","__STYLETRON_DEVTOOLS__","hydrateDevtoolsRule","fullKey","idGenerator","increment","hydrate","SequentialIDGenerator","Cache","MultiCache","injectStylePrefixed","styleBlockToRule","atomicSelector","keyframesBlockToRule","declarationsToBlock","keyframesToBlock","fontFaceBlockToRule","insertRuleIntoDevtools","StyletronClient","constructor","opts","arguments","length","undefined","styleElements","styleIdGenerator","prefix","onNewStyle","value","block","sheet","selector","rule","insertRule","cssRules","e","console","warn","styleCache","media","_cache","insertBeforeMedia","styleElement","document","createElement","container","appendChild","insertBeforeIndex","findSheetIndexWithMedia","children","insertBefore","keyframesCache","getCache","fontFaceCache","parentElement","i","element","hydrateType","getAttribute","textContent","sortedCacheKeys","push","caches","head","Error","renderStyle","style","renderFontFace","fontFace","addValue","renderKeyframes","keyframes","index","child","tagName"],"sources":["src/client/client.ts"],"sourcesContent":["/* eslint-env browser */\n\ndeclare var __DEV__: boolean;\n\ndeclare var __BROWSER__: boolean;\n\nconst STYLES_HYDRATOR = /\\.([^{:]+)(:[^{]+)?{(?:[^}]*;)?([^}]*?)}/g;\nconst KEYFRAMES_HYRDATOR =\n  /@keyframes ([^{]+){((?:(?:from|to|(?:\\d+\\.?\\d*%))\\{(?:[^}])*})*)}/g;\nconst FONT_FACE_HYDRATOR = /@font-face\\{font-family:([^;]+);([^}]*)\\}/g;\n\ntype hydratorT =\n  | typeof STYLES_HYDRATOR\n  | typeof KEYFRAMES_HYRDATOR\n  | typeof FONT_FACE_HYDRATOR;\n\nfunction hydrateStyles<T>(cache: Cache<T>, hydrator: hydratorT, css: string) {\n  let match;\n  while ((match = hydrator.exec(css))) {\n    const [, id, pseudo, key] = match;\n    if (__BROWSER__ && __DEV__ && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n    const fullKey = pseudo ? `${pseudo}${key}` : key;\n    cache.cache[fullKey] = id; // set cache without triggering side effects\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nfunction hydrate<T>(cache: Cache<T>, hydrator: hydratorT, css: string) {\n  let match;\n  while ((match = hydrator.exec(css))) {\n    const [, id, key] = match;\n    if (__BROWSER__ && __DEV__ && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n    cache.cache[key] = id; // set cache without triggering side effects\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nimport SequentialIDGenerator from \"../sequential-id-generator\";\n\nimport type {\n  StandardEngine,\n  KeyframesObject,\n  FontFaceObject,\n  StyleObject,\n} from \"styletron-standard\";\n\nimport {Cache, MultiCache} from \"../cache\";\n\nimport injectStylePrefixed from \"../inject-style-prefixed\";\n\nimport {\n  styleBlockToRule,\n  atomicSelector,\n  keyframesBlockToRule,\n  declarationsToBlock,\n  keyframesToBlock,\n  fontFaceBlockToRule,\n} from \"../css\";\nimport {insertRuleIntoDevtools, hydrateDevtoolsRule} from \"../dev-tool\";\n\ntype hydrateT =\n  | HTMLCollectionOf<HTMLStyleElement>\n  | Array<HTMLStyleElement>\n  | NodeListOf<HTMLStyleElement>;\n\ntype optionsT = {\n  hydrate?: hydrateT;\n  container?: Element;\n  prefix?: string;\n};\n\nclass StyletronClient implements StandardEngine {\n  container: Element;\n  styleElements: {\n    [x: string]: HTMLStyleElement;\n  };\n  fontFaceSheet: HTMLStyleElement;\n  keyframesSheet: HTMLStyleElement;\n\n  styleCache: MultiCache<{\n    pseudo: string;\n    block: string;\n  }>;\n  keyframesCache: Cache<KeyframesObject>;\n  fontFaceCache: Cache<FontFaceObject>;\n\n  constructor(opts: optionsT = {}) {\n    this.styleElements = {};\n\n    const styleIdGenerator = new SequentialIDGenerator(opts.prefix);\n    const onNewStyle = (cache, id, value) => {\n      const {pseudo, block} = value;\n      const sheet: CSSStyleSheet = this.styleElements[cache.key].sheet as any;\n      const selector = atomicSelector(id, pseudo);\n      const rule = styleBlockToRule(selector, block);\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n        if (__BROWSER__ && __DEV__ && window.__STYLETRON_DEVTOOLS__) {\n          insertRuleIntoDevtools(selector, block);\n        }\n      } catch (e) {\n        if (__DEV__) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Failed to inject CSS: \"${rule}\". Perhaps this has invalid or un-prefixed properties?`,\n          );\n        }\n      }\n    };\n\n    // Setup style cache\n    this.styleCache = new MultiCache(\n      styleIdGenerator,\n      (media, _cache, insertBeforeMedia) => {\n        const styleElement = document.createElement(\"style\");\n        styleElement.media = media;\n        if (insertBeforeMedia === void 0) {\n          this.container.appendChild(styleElement);\n        } else {\n          const insertBeforeIndex = findSheetIndexWithMedia(\n            this.container.children,\n            insertBeforeMedia,\n          );\n          this.container.insertBefore(\n            styleElement,\n            this.container.children[insertBeforeIndex],\n          );\n        }\n\n        this.styleElements[media] = styleElement;\n      },\n      onNewStyle,\n    );\n\n    this.keyframesCache = new Cache(\n      new SequentialIDGenerator(opts.prefix),\n      (cache, id, value) => {\n        this.styleCache.getCache(\"\");\n        const sheet: CSSStyleSheet = this.styleElements[\"\"].sheet as any;\n        const rule = keyframesBlockToRule(id, keyframesToBlock(value));\n        try {\n          sheet.insertRule(rule, sheet.cssRules.length);\n        } catch (e) {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `Failed to inject CSS: \"${rule}\". Perhaps this has invalid or un-prefixed properties?`,\n            );\n          }\n        }\n      },\n    );\n\n    this.fontFaceCache = new Cache(\n      new SequentialIDGenerator(opts.prefix),\n      (cache, id, value) => {\n        this.styleCache.getCache(\"\");\n        const sheet: CSSStyleSheet = this.styleElements[\"\"].sheet as any;\n        const rule = fontFaceBlockToRule(id, declarationsToBlock(value));\n        try {\n          sheet.insertRule(rule, sheet.cssRules.length);\n        } catch (e) {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `Failed to inject CSS: \"${rule}\". Perhaps this has invalid or un-prefixed properties?`,\n            );\n          }\n        }\n      },\n    );\n\n    if (opts.container) {\n      this.container = opts.container;\n    }\n\n    // Hydrate\n    if (opts.hydrate && opts.hydrate.length > 0) {\n      // infer container from parent element\n      if (!this.container) {\n        const parentElement = opts.hydrate[0].parentElement;\n        if (parentElement !== null && parentElement !== void 0) {\n          this.container = parentElement;\n        }\n      }\n\n      for (let i = 0; i < opts.hydrate.length; i++) {\n        const element = opts.hydrate[i];\n        const hydrateType = element.getAttribute(\"data-hydrate\");\n        if (hydrateType === \"font-face\") {\n          hydrate(this.fontFaceCache, FONT_FACE_HYDRATOR, element.textContent);\n          continue;\n        }\n        if (hydrateType === \"keyframes\") {\n          hydrate(this.keyframesCache, KEYFRAMES_HYRDATOR, element.textContent);\n          continue;\n        }\n        const key = element.media ? element.media : \"\";\n        this.styleElements[key] = element;\n        const cache = new Cache(styleIdGenerator, onNewStyle);\n        cache.key = key;\n        hydrateStyles(cache, STYLES_HYDRATOR, element.textContent);\n        this.styleCache.sortedCacheKeys.push(key);\n        this.styleCache.caches[key] = cache;\n      }\n    }\n\n    if (!this.container) {\n      if (document.head === null) {\n        throw new Error(\"No container provided and `document.head` was null\");\n      }\n      this.container = document.head;\n    }\n  }\n\n  renderStyle(style: StyleObject): string {\n    return injectStylePrefixed(this.styleCache, style, \"\", \"\");\n  }\n\n  renderFontFace(fontFace: FontFaceObject): string {\n    const key = declarationsToBlock(fontFace);\n    return this.fontFaceCache.addValue(key, fontFace);\n  }\n\n  renderKeyframes(keyframes: KeyframesObject): string {\n    const key = keyframesToBlock(keyframes);\n    return this.keyframesCache.addValue(key, keyframes);\n  }\n}\n\nexport default StyletronClient;\n\nfunction findSheetIndexWithMedia(children, media) {\n  let index = 0;\n  for (; index < children.length; index++) {\n    const child = children[index];\n    if (\n      child.tagName === \"STYLE\" &&\n      (child as any as HTMLStyleElement).media === media\n    ) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}